using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using HireGnome.ViewModels;
using HireGnome.Models;

namespace HireGnome.Controllers
{
    [Authorize(Roles = "admin, user")]
    public class CheckOutController : Controller
    {
        // GET: CheckOut
        public ActionResult Index()
        {
            return View();
        }

        public ActionResult MyBills()
        {
            using(var db = new MainDbContext())
            {
                var user = db.Users.FirstOrDefault(x => x.Name == User.Identity.Name);
                List<Bills> bills = db.Bills.Where(x => x.User.Id == user.Id).ToList();

                ShowUserBillsViewModel model = new ShowUserBillsViewModel();
                model.User = new Models.Users();
                model.User.FirstName = user.FirstName;
                model.User.SecondName = user.SecondName;
                model.Bills = new List<Models.Bills>();
                foreach (var bill in bills)
                    model.Bills.Add(bill);
                return View(model);
            }
        }
       
        public ActionResult Confirmation()
        {
            using (var db = new MainDbContext())
            {
                // Searching the logged in user and taking his main cart
                var user = db.Users.FirstOrDefault(x => x.Name == User.Identity.Name);
                var main_cart = db.Carts.FirstOrDefault(x => x.User.Id == user.Id && x.IsMainCart);
                
                // Calculating the final price
                double price = 0;
                if (main_cart.Products.Count == 0)
                    return RedirectToAction("Index", "Product");
                foreach (var gnome in main_cart.Products)
                    price += gnome.Price * ((double)gnome.Offer / 100);
                
                // Creating a new bill
                var bill = db.Bills.Create();
                
                bill.CreationDate = DateTime.Now;
                bill.ModificationDate = DateTime.Now;
                bill.FinalPrice = price;

                // Link User and Cart with the bill
                bill.User = user;
                bill.Cart = main_cart;
                user.Bills.Add(bill);
                main_cart.Bill = bill;
                
                // Deactivating the previous cart; marking it as billed
                main_cart.IsBilled = true;
                main_cart.IsMainCart = false;

                // Creating a new default main cart for this user
                var new_main_cart = db.Carts.Create();
                new_main_cart.IsMainCart = true;
                new_main_cart.IsPublic = false;
                new_main_cart.CreationDate = DateTime.Now;
                new_main_cart.ModificationDate = DateTime.Now;
                new_main_cart.Name = "Generated by a checkout";

                // Linking the new cart with the user
                user.Carts.Add(new_main_cart);
                new_main_cart.User = user;

                // Saving database
                db.SaveChanges();

                return View(bill);
            }
        }

        

    }
}